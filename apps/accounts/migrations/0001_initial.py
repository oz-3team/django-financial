# Generated by Django 5.2.5 on 2025-08-30 12:37

import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("number", models.CharField(max_length=32, unique=True)),
                (
                    "currency",
                    models.CharField(
                        choices=[("KRW", "KRW"), ("USD", "USD")],
                        default="KRW",
                        max_length=3,
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=20
                    ),
                ),
                ("status", models.CharField(default="ACTIVE", max_length=16)),
                ("version", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="accounts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TransactionHistory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "tx_type",
                    models.CharField(
                        choices=[
                            ("DEPOSIT", "DEPOSIT"),
                            ("WITHDRAW", "WITHDRAW"),
                            ("TRANSFER_OUT", "TRANSFER_OUT"),
                            ("TRANSFER_IN", "TRANSFER_IN"),
                            ("FEE", "FEE"),
                            ("REVERSAL", "REVERSAL"),
                        ],
                        max_length=16,
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=20)),
                (
                    "running_balance",
                    models.DecimalField(decimal_places=2, max_digits=20),
                ),
                (
                    "currency",
                    models.CharField(
                        choices=[("KRW", "KRW"), ("USD", "USD")],
                        default="KRW",
                        max_length=3,
                    ),
                ),
                (
                    "description",
                    models.CharField(blank=True, default="", max_length=255),
                ),
                (
                    "occurred_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("posted_at", models.DateTimeField(auto_now_add=True)),
                ("transfer_id", models.UUIDField(blank=True, db_index=True, null=True)),
                (
                    "idempotency_key",
                    models.CharField(blank=True, max_length=64, null=True),
                ),
                (
                    "external_ref",
                    models.CharField(
                        default=uuid.uuid4, editable=False, max_length=64, unique=True
                    ),
                ),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="transactions",
                        to="accounts.account",
                    ),
                ),
                (
                    "counterparty",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="counter_transactions",
                        to="accounts.account",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="account",
            index=models.Index(fields=["owner"], name="accounts_ac_owner_i_e99d96_idx"),
        ),
        migrations.AddIndex(
            model_name="account",
            index=models.Index(fields=["number"], name="accounts_ac_number_92e5e2_idx"),
        ),
        migrations.AddIndex(
            model_name="transactionhistory",
            index=models.Index(
                fields=["account", "-occurred_at"],
                name="accounts_tr_account_f35b88_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="transactionhistory",
            index=models.Index(
                fields=["transfer_id"], name="accounts_tr_transfe_5383c2_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="transactionhistory",
            constraint=models.CheckConstraint(
                condition=models.Q(("amount__gt", 0)), name="amount_gt_zero"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="transactionhistory",
            unique_together={("account", "idempotency_key")},
        ),
    ]
